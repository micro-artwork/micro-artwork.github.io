<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hobby Electronics on Oops Hardware</title><link>https://opensourcehardware.io/tags/hobby-electronics/</link><description>Recent content in Hobby Electronics on Oops Hardware</description><generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>rollcake.dev@gmail.com (Yogo)</managingEditor><webMaster>rollcake.dev@gmail.com (Yogo)</webMaster><copyright>© 2025 Yogo</copyright><lastBuildDate>Mon, 15 Sep 2025 15:09:27 +0900</lastBuildDate><atom:link href="https://opensourcehardware.io/tags/hobby-electronics/index.xml" rel="self" type="application/rss+xml"/><item><title>[빛나리] 주간 작업 일지</title><link>https://opensourcehardware.io/projects/bitnari/tasks/</link><pubDate>Mon, 15 Sep 2025 15:09:27 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/tasks/</guid><description>&lt;p>주차별 진행했던 작업 또는 고찰에 대해서 간략하게 정리 합니다.&lt;/p>
&lt;p>처음부터 보시면 의식의 흐름대로 정처없이 흘러가는 작업기에 대한 간접적 체감이 가능합니다.&lt;/p></description></item><item><title>[빛나리] 하드웨어 설계 고려사항</title><link>https://opensourcehardware.io/projects/bitnari/03/</link><pubDate>Fri, 05 Sep 2025 03:49:26 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/03/</guid><description>&lt;!-- ## 하드웨어 설계 고려사항
앰비엔트 라이트 개발 결정 전부터 전반적인 시스템 형태에 대해서 고민을 했었고, 기능 요구사항 설계에 앞서 필수 하드웨어 또는 모듈에 대한 사전 조사와 이해를 우선했습니다. 그 이후 하드웨어 사양을 결정을 하였고 관련 사항에 대해서 기술해보겠습니다.
## MCU (Micro Controller Unit)
MCU를 사용하는 지난 프로젝트들에서는 모두 Microchip 사의 PIC를 사용했습니다. PIC을 사용해야하는 특별한 이유가 있던건 아니고 집에서 굴러다니는 MCU 보드였음이 주된 이유였습니다. 산업군에서는 여전히 인기있고 잘 알려진 제품이지만, 최근에는 ARM 계열의 압도적인 인기로 인하여 취미를 대상으로 하는 메이커들에게는 마이너한 MCU 이기 때문에 접근성이 낮을 수 있겠다 싶었습니다.
그래서 몇 가지 이유로 Raspberry PI Pico 시리즈를 사용하기로 결정 했습니다. 일단 많이 알려진 제품이고 공식 모듈이 존재하며 별도의 JTAG이나 ROM 라이터, UART 모듈이 없어도 부트로더에 의해 USB MSD 방식으로 펌웨어 쓰기가 가능한 점이 가장 큰 이유입니다. 그리고 별도 RPI Pico 시리즈를 하나 더 구비하면 고가의 디버거를 구매하지 않아도 디버깅이 가능하니 취미와 메이커 들 기준에서는 좋은 선택이라고 생각했습니다.
RP2040(W), RP2350(W)와 같은 공식 보드들은 모두 동일한 핀맵으로 호환 가능하기 때문에, 도터(또는 쉴드) 보드로 구성할 경우 처리 속도나 통신 방식에 따라 특정 버전 선택이나 상호 마이그레이션이 용이하다는 장점이 있습니다. -->
&lt;h1 class="relative group">하드웨어 설계 고려사항
&lt;div id="하드웨어-설계-고려사항" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ed%95%98%eb%93%9c%ec%9b%a8%ec%96%b4-%ec%84%a4%ea%b3%84-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>앰비언트 라이트(Ambient Light) 시스템 개발을 위한 하드웨어 설계 시 고려해야 할 핵심 요소들을 다뤄보겠습니다. 프로젝트의 기능적 요구사항을 충족시키기 위해 MCU(Micro Controller Unit), LED 스트립, 그리고 전력 관리의 세 가지 주요 하드웨어 구성 요소에 대한 기술적 검토 및 결정 과정을 정리합니다.&lt;/p></description></item><item><title>[빛나리] 프로젝트 이름과 이유</title><link>https://opensourcehardware.io/projects/bitnari/02/</link><pubDate>Fri, 29 Aug 2025 11:09:12 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/02/</guid><description>&lt;h1 class="relative group">프로젝트 이름과 이유
&lt;div id="프로젝트-이름과-이유" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8-%ec%9d%b4%eb%a6%84%ea%b3%bc-%ec%9d%b4%ec%9c%a0" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>프로젝트 이름이 어떻게 탄생했는지 배경 에피소드와 프로젝트를 왜 진행하는지에 대한 이유를 공유합니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/bitnari/02/featured.png"/></item><item><title>[빛나리] 프로젝트의 시작</title><link>https://opensourcehardware.io/projects/bitnari/01/</link><pubDate>Mon, 25 Aug 2025 23:35:09 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/01/</guid><description>&lt;h1 class="relative group">프로젝트의 시작
&lt;div id="프로젝트의-시작" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%ec%9d%98-%ec%8b%9c%ec%9e%91" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>프로젝트를 시작하게 된 배경에 대한 이야기 입니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/bitnari/01/featured.jpg"/></item><item><title>빛나리(Bitnari) 프로젝트</title><link>https://opensourcehardware.io/projects/bitnari/</link><pubDate>Mon, 25 Aug 2025 23:32:29 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/</guid><description>&lt;p>앰비언트(Ambient) 라이팅 프로젝트&lt;/p></description></item><item><title>마이크로소프트 서피스 다이얼 클론 제작 - 3 (v0.5 마무리)</title><link>https://opensourcehardware.io/projects/suface-dial/3/</link><pubDate>Mon, 28 Feb 2022 18:23:32 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/suface-dial/3/</guid><description>&lt;p>테스트 환경에서 기본적인 기능을 구현하고 회로와 기구를 구성합니다.&lt;/p>
&lt;h2 class="relative group">제작
&lt;div id="제작" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ec%a0%9c%ec%9e%91" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;h3 class="relative group">회로 설계
&lt;div id="회로-설계" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ed%9a%8c%eb%a1%9c-%ec%84%a4%ea%b3%84" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h3>
&lt;p>회로 설계 자체는 모두 모듈을 사용하기 때문에 크게 어려운 점이 없습니다. NRF52와 배터리 충전 역시 모듈을 사용하기 때문에 엔코더와 스위치 연결만 잘 해주어도 됩니다. NRF52 모듈은 Holyiot사의 YJ-17095&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>을 사용하였습니다. 크기가 9.4 x 9.25mm 밖에 안될 정도로 매우 작습니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/suface-dial/3/featured.jpg"/></item><item><title>마이크로소프트 서피스 다이얼 클론 제작 - 2</title><link>https://opensourcehardware.io/projects/suface-dial/2/</link><pubDate>Sun, 27 Feb 2022 16:10:23 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/suface-dial/2/</guid><description>&lt;p>본문 이미지 출처 - 마이크로소프트&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h2 class="relative group">펌웨어 개발
&lt;div id="펌웨어-개발" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%ed%8e%8c%ec%9b%a8%ec%96%b4-%ea%b0%9c%eb%b0%9c" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>nrf52 SDK 폴더내에 샘플이 포함되어 있습니다. examples 폴더 안에 관련 샘플들을 찾아볼 수 있는데, 서피스 다이얼은 HID 디바이스 이므로 ble_app_hids_keyboard나 ble_app_hids_mouse를 베이스로 작성하면 어렵지 않게 시작할 수 있습니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/suface-dial/2/featured.jpg"/></item><item><title>마이크로소프트 서피스 다이얼 클론 제작 - 1 (Wanna be Surface Dial)</title><link>https://opensourcehardware.io/projects/suface-dial/1/</link><pubDate>Tue, 15 Feb 2022 22:43:26 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/suface-dial/1/</guid><description>&lt;h2 class="relative group">마이크로소프트 서피스 다이얼(Microsoft Surface Dial)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
&lt;div id="마이크로소프트-서피스-다이얼microsoft-surface-dial" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%eb%a7%88%ec%9d%b4%ed%81%ac%eb%a1%9c%ec%86%8c%ed%94%84%ed%8a%b8-%ec%84%9c%ed%94%bc%ec%8a%a4-%eb%8b%a4%ec%9d%b4%ec%96%bcmicrosoft-surface-dial" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>마이크로소프트 서피스 다이얼(이하 서피스다이얼 또는 다이얼)은 퍽(Puck) 형태로 회전과 클릭이 가능한 새로운 형태의 입력 디바이스 입니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/suface-dial/1/featured.jpg"/></item><item><title>서피스 다이얼 클론</title><link>https://opensourcehardware.io/projects/suface-dial/</link><pubDate>Tue, 15 Feb 2022 22:43:26 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/suface-dial/</guid><description>&lt;p>서피스 다이얼 기능을 구현하는 하드웨어 프로젝트 입니다.&lt;/p></description></item><item><title>유튜브 미디어 컨트롤러</title><link>https://opensourcehardware.io/projects/media-controller/</link><pubDate>Fri, 12 Nov 2021 11:29:20 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/</guid><description>&lt;p>웹브라우져에서 Youtube 재생을 제어하는 하드웨어 및 크롬 확장 프로젝트 입니다.&lt;/p></description></item><item><title>유튜브 플레이어 컨트롤러 제작기 - 02</title><link>https://opensourcehardware.io/projects/media-controller/2/</link><pubDate>Fri, 12 Nov 2021 11:29:20 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/2/</guid><description>&lt;p>지난 포스트에서 미디어 컨트롤러를 제작하고 동작하는 것을 확인하였습니다.
다만, 포스트 마지막에 남겼듯이 유튜브 다양한 기능 제어를 위해서는 미디어 컨트롤러만으로는 한계점이 있습니다. 당연히도 그럴 것이 기본적으로 표준 규격 컨트롤로서의 역할만 가능 하기 때문입니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/media-controller/2/featured.jpg"/></item><item><title>유튜브 플레이어 컨트롤러 제작기 - 01</title><link>https://opensourcehardware.io/projects/media-controller/1/</link><pubDate>Mon, 08 Nov 2021 11:22:45 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/1/</guid><description>&lt;p>PC에서 게임을 하거나 음악을 들을 때 간혹 소리가 너무 작거나 또는 큰 이유로 볼륨을 조절해야할 때가 종종 있습니다. 외장 DAC이나 사운드 카드 또는 스피커를 사용 시 물리적인 볼륨조절 노브(knob)가 있으면 그 것들을 이용하면 되지만 헤드폰이나 이어폰 또는 물리적인 볼륨 조절이 어려운 경우는 작업표시줄 하단의 스피커 볼륨 조절을 이용해야합니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/media-controller/1/featured.jpg"/></item><item><title>모스(Morse) 부호 키보드 만들기</title><link>https://opensourcehardware.io/projects/morse-keyboard/</link><pubDate>Thu, 28 Oct 2021 11:58:34 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/morse-keyboard/</guid><description>&lt;p>잠이오지 않아 뒤척이던 어느 늦은밤 커뮤니티의 게시물을 훑어보던 도중 재미있는 짤을 하나 발견했습니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/morse-keyboard/featured.jpg"/></item></channel></rss>
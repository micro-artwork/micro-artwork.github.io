<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hardware on Oops Hardware</title><link>https://opensourcehardware.io/tags/hardware/</link><description>Recent content in Hardware on Oops Hardware</description><generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>rollcake.dev@gmail.com (Yogo)</managingEditor><webMaster>rollcake.dev@gmail.com (Yogo)</webMaster><copyright>© 2025 Yogo</copyright><lastBuildDate>Mon, 25 Aug 2025 23:32:29 +0900</lastBuildDate><atom:link href="https://opensourcehardware.io/tags/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>빛나리(Bitnari) 프로젝트</title><link>https://opensourcehardware.io/projects/bitnari/</link><pubDate>Mon, 25 Aug 2025 23:32:29 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/bitnari/</guid><description>&lt;p>앰비언트(Ambient) 라이팅 프로젝트&lt;/p></description></item><item><title>Nintendo Entertainment System</title><link>https://opensourcehardware.io/projects/nes/</link><pubDate>Mon, 07 Mar 2022 13:10:06 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/nes/</guid><description>&lt;p>닌텐도 엔터테인먼트 시스템(아시아: 패밀리) 에뮬레이션에 대한 프로젝트 입니다.&lt;/p></description></item><item><title>서피스 다이얼 클론</title><link>https://opensourcehardware.io/projects/suface-dial/</link><pubDate>Tue, 15 Feb 2022 22:43:26 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/suface-dial/</guid><description>&lt;p>서피스 다이얼 기능을 구현하는 하드웨어 프로젝트 입니다.&lt;/p></description></item><item><title>유튜브 미디어 컨트롤러</title><link>https://opensourcehardware.io/projects/media-controller/</link><pubDate>Fri, 12 Nov 2021 11:29:20 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/</guid><description>&lt;p>웹브라우져에서 Youtube 재생을 제어하는 하드웨어 및 크롬 확장 프로젝트 입니다.&lt;/p></description></item><item><title>유튜브 플레이어 컨트롤러 제작기 - 02</title><link>https://opensourcehardware.io/projects/media-controller/2/</link><pubDate>Fri, 12 Nov 2021 11:29:20 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/2/</guid><description>&lt;p>지난 포스트에서 미디어 컨트롤러를 제작하고 동작하는 것을 확인하였습니다.
다만, 포스트 마지막에 남겼듯이 유튜브 다양한 기능 제어를 위해서는 미디어 컨트롤러만으로는 한계점이 있습니다. 당연히도 그럴 것이 기본적으로 표준 규격 컨트롤로서의 역할만 가능 하기 때문입니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/media-controller/2/featured.jpg"/></item><item><title>유튜브 플레이어 컨트롤러 제작기 - 01</title><link>https://opensourcehardware.io/projects/media-controller/1/</link><pubDate>Mon, 08 Nov 2021 11:22:45 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/media-controller/1/</guid><description>&lt;p>PC에서 게임을 하거나 음악을 들을 때 간혹 소리가 너무 작거나 또는 큰 이유로 볼륨을 조절해야할 때가 종종 있습니다. 외장 DAC이나 사운드 카드 또는 스피커를 사용 시 물리적인 볼륨조절 노브(knob)가 있으면 그 것들을 이용하면 되지만 헤드폰이나 이어폰 또는 물리적인 볼륨 조절이 어려운 경우는 작업표시줄 하단의 스피커 볼륨 조절을 이용해야합니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/media-controller/1/featured.jpg"/></item><item><title>모스(Morse) 부호 키보드 만들기</title><link>https://opensourcehardware.io/projects/morse-keyboard/</link><pubDate>Thu, 28 Oct 2021 11:58:34 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/morse-keyboard/</guid><description>&lt;p>잠이오지 않아 뒤척이던 어느 늦은밤 커뮤니티의 게시물을 훑어보던 도중 재미있는 짤을 하나 발견했습니다.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://opensourcehardware.io/projects/morse-keyboard/featured.jpg"/></item><item><title>Nintendo Entertainment System - CPU</title><link>https://opensourcehardware.io/projects/nes/nesdoc-cpu/</link><pubDate>Tue, 06 Jul 2021 23:05:02 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/projects/nes/nesdoc-cpu/</guid><description>&lt;!-- +++
author = "Yogo"
title = "Nintendo Entertainment System - CPU"
date = 2021-07-06T23:05:02+09:00
draft = false
categories = ["Projects"]
series = ["NES Emulator"]
tags = ["프로젝트", "NES", "Emulator"]
type = "post"
+++ -->
&lt;h1 class="relative group">Nintendo Entertainment System
&lt;div id="nintendo-entertainment-system" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#nintendo-entertainment-system" aria-label="앵커">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>NesDev Wiki&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>와 Nintendo Entertainment System Documentation&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> 문서를 기반으로 NES 시스템을 정리 하고자 합니다. 해당 문서에서는 하드웨어 및 프로세서에 대한 내용을 많이 담고 있어서 이해를 위해서는 기본적인 마이크로 프로세서에 대한 지식이 요구됩니다.&lt;/p></description></item><item><title>PS2 듀얼쇼크 컨트롤러 호스트(리더) 구현 및 분석</title><link>https://opensourcehardware.io/posts/2021/01/ps2-dualshock-host/</link><pubDate>Wed, 27 Jan 2021 03:21:59 +0900</pubDate><author>rollcake.dev@gmail.com (Yogo)</author><guid>https://opensourcehardware.io/posts/2021/01/ps2-dualshock-host/</guid><description>&lt;!-- https://en.wikipedia.org/wiki/DualShock#/media/File:DualShock_2.jpg -->
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/DualShock_2.jpg/1280px-DualShock_2.jpg"/>
&lt;p>[이미지 출처] 위키페디아 &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>2007년 초쯤 마이크로프로세서(이하 MCU) 스터디를 하면서 주로 해외에서 하드웨어 관련 정보를 찾아보던 도중 우연히 어느 일본인이 개인 홈페이지에 플레이스테인션2(이하 PS2) 듀얼쇼크2 컨트롤러(이하 듀속 또는 DS2) 시그널을 분석해서 공유한 페이지를 발견하게 됩니다.&lt;/p></description></item></channel></rss>